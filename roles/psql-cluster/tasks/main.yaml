---

- name: Create replication user account
  postgresql_user:
    name: "{{ pgsqlrep_user }}"
    password: "{{ pgsqlrep_password }}"
    role_attr_flags: replication
  become: yes
  when:
    - inventory_hostname in groups['psql-master']

- name: Add trust in pg_hba.conf
  lineinfile:
    state: present
    dest: "/etc/postgresql/13/main/pg_hba.conf"
    regexp: 'host.*replication.*/32.*trust'
    line: 'host    replication    {{ pgsqlrep_user }}  0.0.0.0/0 trust'
  when:
    - inventory_hostname in groups['psql-master']

- name: Restart PostgreSQL
  service:
    name: "{{ postgresql_service_name }}"
    state: restarted
  when:
    - inventory_hostname in groups['psql-master']

- name: Stop PostgreSQL
  service:
    name: "{{ postgresql_service_name }}"
    state: stopped
  when:
    - inventory_hostname in groups['psql-slave']

- name: Clear out data directory
  file:
    path: "{{ pgsqlrep_data_path }}"
    state: absent
  when:
    - inventory_hostname in groups['psql-slave']

- name: Create empty data directory
  file:
    path: "{{ pgsqlrep_data_path }}"
    state: directory
    owner: postgres
    group: postgres
    mode: '0700'
  when:
    - inventory_hostname in groups['psql-slave']

- name: Create base backup
  shell: pg_basebackup -D {{ pgsqlrep_data_path }} -h {{ pgsqlrep_master_address }} -U {{ pgsqlrep_user }} -Fp -R -Xs -P -w
  become: yes
  become_user: postgres
  retries: 5
  delay: 5
  register: result
  until: result is not failed
  when:
    - inventory_hostname in groups['psql-slave']

- name: Start and enable PostgreSQL
  service:
    name: "{{ postgresql_service_name }}"
    state: started
    enabled: yes
  when:
    - inventory_hostname in groups['psql-slave']
